# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2017-05-18 16:23
from __future__ import unicode_literals

import core.fields
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Логин пользователя')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=150, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('second_name', models.CharField(max_length=150, verbose_name='Отчество')),
                ('last_test_time', models.DateField(blank=True, null=True, verbose_name='Дата последнего учёта')),
                ('next_test_time', models.DateField(blank=True, null=True, verbose_name='Дата следующего учёта')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Доступ в административную часть')),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Пользователи',
                'verbose_name': 'пользователя',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(verbose_name='Текст')),
                ('points', models.PositiveSmallIntegerField(verbose_name='Кол-во баллов')),
            ],
            options={
                'verbose_name_plural': 'Ответы на вопросы',
                'verbose_name': 'ответ',
            },
        ),
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name_plural': 'Тестирования',
                'verbose_name': 'тестирование',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(verbose_name='Текст')),
                ('sum_points', models.BooleanField(verbose_name='Суммировать баллы')),
                ('examination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='core.Examination', verbose_name='Тестирование')),
            ],
            options={
                'verbose_name_plural': 'Вопросы',
                'verbose_name': 'вопрос',
            },
        ),
        migrations.CreateModel(
            name='TextQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(verbose_name='Текст')),
                ('examination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_questions', to='core.Examination', verbose_name='Тестирование')),
            ],
            options={
                'verbose_name_plural': 'Не стандартные вопросы',
                'verbose_name': 'Не стандартный вопрос',
            },
        ),
        migrations.CreateModel(
            name='TextUserAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(verbose_name='Текст')),
                ('points', models.PositiveSmallIntegerField(verbose_name='Кол-во баллов')),
                ('text_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='core.TextQuestion', verbose_name='Вопрос')),
            ],
            options={
                'verbose_name_plural': 'Текстовые ответы',
                'verbose_name': 'Текстовый ответ',
            },
        ),
        migrations.CreateModel(
            name='UserExamination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.PositiveSmallIntegerField(default=0, verbose_name='Баллы')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Начат')),
                ('finished_at', models.DateTimeField(blank=True, null=True, verbose_name='Закончен')),
                ('examination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_examinations', to='core.Examination', verbose_name='Тестирование')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_examinations', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name_plural': 'Тестирования пользователей',
                'verbose_name': 'тестирование пользователя',
            },
        ),
        migrations.CreateModel(
            name='UserExaminationAnswerLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_data', core.fields.JSONField()),
                ('answer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.Answer')),
            ],
            options={
                'verbose_name_plural': 'Лог ответов на вопросы',
                'verbose_name': 'Лог ответов на вопросы',
            },
        ),
        migrations.CreateModel(
            name='UserExaminationQuestionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_data', core.fields.JSONField()),
                ('question_answers_data', core.fields.JSONField(default='[]')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='logs', to='core.Question')),
                ('user_examination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='core.UserExamination')),
            ],
            options={
                'verbose_name_plural': 'Лог ответов',
                'verbose_name': 'Лог ответов',
            },
        ),
        migrations.AddField(
            model_name='userexaminationanswerlog',
            name='user_examination_question_log',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_examination_answer_logs', to='core.UserExaminationQuestionLog'),
        ),
        migrations.AddField(
            model_name='textuseranswer',
            name='user_examination',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_answers', to='core.UserExamination'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='core.Question', verbose_name='Вопрос'),
        ),
    ]
